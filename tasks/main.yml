---
- name: Create loki config volume
  community.docker.docker_volume:
    name: "{{ system_loki_docker_volume }}"

- name: Ensure loki image is pulled
  community.docker.docker_image:
    name: "{{ system_loki_docker_image }}"
    source: pull
    force_source: yes
  register: pulled

- name: Remove loki container
  community.docker.docker_container:
    name: "{{ system_loki_docker_container }}"
    state: absent
  when: pulled.changed

- name: Get infos on loki container
  community.docker.docker_container_info:
    name: "{{ system_loki_docker_container }}"
  register: result

- name: Create loki container
  community.docker.docker_container:
    command: ["-config.file=/mnt/config/loki-config.yml"]
    image: "{{ system_loki_docker_image }}"
    mounts:
     - source: "{{ system_loki_docker_volume }}"
       target: /mnt/config
    name: "{{ system_loki_docker_container }}"
    networks:
     - name: "{{ system_loki_docker_network }}"
    restart_policy: unless-stopped
    state: started
  when:
    pulled.changed
    or
    result.exists == false

- name: Create tmp loki directory
  ansible.builtin.file:
    path: "{{ system_loki_tmp_dir }}"
    state: directory
  when:
    result.exists == false

- name: Copy loki file
  ansible.builtin.copy:
    src: loki-config.yml
    dest: "{{ system_loki_tmp_dir }}/loki-config.yml"
  when:
    result.exists == false

- name: Copy config file into loki container
  shell: "docker cp {{ system_loki_tmp_dir }}/loki-config.yml {{ system_loki_docker_container }}:/mnt/config/loki-config.yml"
  when:
    result.exists == false

- name: Remove tmp loki directory
  ansible.builtin.file:
    path: "{{ system_loki_tmp_dir }}"
    state: absent
  when:
    result.exists == false

- name: Restart loki container
  community.docker.docker_container:
    name: "{{ system_loki_docker_container }}"
    restart: yes
  when:
    result.exists == false
